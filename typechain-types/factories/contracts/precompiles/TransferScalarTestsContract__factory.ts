/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  TransferScalarTestsContract,
  TransferScalarTestsContractInterface,
} from "../../../contracts/precompiles/TransferScalarTestsContract";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "gtUint8",
            name: "a8_s",
            type: "uint256",
          },
          {
            internalType: "gtUint8",
            name: "b8_s",
            type: "uint256",
          },
          {
            internalType: "gtUint16",
            name: "a16_s",
            type: "uint256",
          },
          {
            internalType: "gtUint16",
            name: "b16_s",
            type: "uint256",
          },
          {
            internalType: "gtUint32",
            name: "a32_s",
            type: "uint256",
          },
          {
            internalType: "gtUint32",
            name: "b32_s",
            type: "uint256",
          },
          {
            internalType: "gtUint64",
            name: "a64_s",
            type: "uint256",
          },
          {
            internalType: "gtUint64",
            name: "b64_s",
            type: "uint256",
          },
        ],
        internalType: "struct TransferScalarTestsContract.AllGTCastingValues",
        name: "allGTCastingValues",
        type: "tuple",
      },
      {
        internalType: "uint8",
        name: "new_a",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "new_b",
        type: "uint8",
      },
      {
        internalType: "bool",
        name: "res",
        type: "bool",
      },
      {
        internalType: "uint8",
        name: "amount",
        type: "uint8",
      },
    ],
    name: "computeAndChekTransfer16",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "gtUint8",
            name: "a8_s",
            type: "uint256",
          },
          {
            internalType: "gtUint8",
            name: "b8_s",
            type: "uint256",
          },
          {
            internalType: "gtUint16",
            name: "a16_s",
            type: "uint256",
          },
          {
            internalType: "gtUint16",
            name: "b16_s",
            type: "uint256",
          },
          {
            internalType: "gtUint32",
            name: "a32_s",
            type: "uint256",
          },
          {
            internalType: "gtUint32",
            name: "b32_s",
            type: "uint256",
          },
          {
            internalType: "gtUint64",
            name: "a64_s",
            type: "uint256",
          },
          {
            internalType: "gtUint64",
            name: "b64_s",
            type: "uint256",
          },
        ],
        internalType: "struct TransferScalarTestsContract.AllGTCastingValues",
        name: "allGTCastingValues",
        type: "tuple",
      },
      {
        internalType: "uint8",
        name: "new_a",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "new_b",
        type: "uint8",
      },
      {
        internalType: "bool",
        name: "res",
        type: "bool",
      },
      {
        internalType: "uint8",
        name: "amount",
        type: "uint8",
      },
    ],
    name: "computeAndChekTransfer32",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "gtUint8",
            name: "a8_s",
            type: "uint256",
          },
          {
            internalType: "gtUint8",
            name: "b8_s",
            type: "uint256",
          },
          {
            internalType: "gtUint16",
            name: "a16_s",
            type: "uint256",
          },
          {
            internalType: "gtUint16",
            name: "b16_s",
            type: "uint256",
          },
          {
            internalType: "gtUint32",
            name: "a32_s",
            type: "uint256",
          },
          {
            internalType: "gtUint32",
            name: "b32_s",
            type: "uint256",
          },
          {
            internalType: "gtUint64",
            name: "a64_s",
            type: "uint256",
          },
          {
            internalType: "gtUint64",
            name: "b64_s",
            type: "uint256",
          },
        ],
        internalType: "struct TransferScalarTestsContract.AllGTCastingValues",
        name: "allGTCastingValues",
        type: "tuple",
      },
      {
        internalType: "uint8",
        name: "new_a",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "new_b",
        type: "uint8",
      },
      {
        internalType: "bool",
        name: "res",
        type: "bool",
      },
      {
        internalType: "uint8",
        name: "amount",
        type: "uint8",
      },
    ],
    name: "computeAndChekTransfer64",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getResults",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "a",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "b",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "amount",
        type: "uint8",
      },
    ],
    name: "transferScalarTest",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061164e806100206000396000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c80634717f97c116100505780634717f97c14610094578063de9f7a7d146100d4578063df6d2101146100e757600080fd5b8063298bd1a31461006c578063451353bb14610081575b600080fd5b61007f61007a366004611452565b6100fa565b005b61007f61008f366004611452565b6104af565b60005460ff80821691610100810482169162010000909104165b6040805160ff948516815293909216602084015215159082015260600160405180910390f35b61007f6100e2366004611452565b610677565b6100ae6100f536600461155f565b610b6b565b600080600061011588608001518960a001518660ff16610d88565b92509250925061012483610e4d565b63ffffffff168760ff1614801561014b575061013f82610e4d565b63ffffffff168660ff16145b8015610162575061015b81610ef0565b1515851515145b6101bd5760405162461bcd60e51b815260206004820152602160248201527f7472616e73666572546573743a20636865636b207363616c6172206661696c656044820152601960fa1b60648201526084015b60405180910390fd5b6101d388600001518960a001518660ff16610f81565b919450925090506101e383610e4d565b63ffffffff168760ff1614801561020a57506101fe82610e4d565b63ffffffff168660ff16145b8015610221575061021a81610ef0565b1515851515145b6102775760405162461bcd60e51b815260206004820152602160248201527f7472616e73666572546573743a20636865636b207363616c6172206661696c656044820152601960fa1b60648201526084016101b4565b61028d886080015189602001518660ff16610f9d565b9194509250905061029d83610e4d565b63ffffffff168760ff161480156102c457506102b882610e4d565b63ffffffff168660ff16145b80156102db57506102d481610ef0565b1515851515145b6103315760405162461bcd60e51b815260206004820152602160248201527f7472616e73666572546573743a20636865636b207363616c6172206661696c656044820152601960fa1b60648201526084016101b4565b61034788604001518960a001518660ff16610fb9565b9194509250905061035783610e4d565b63ffffffff168760ff1614801561037e575061037282610e4d565b63ffffffff168660ff16145b8015610395575061038e81610ef0565b1515851515145b6103eb5760405162461bcd60e51b815260206004820152602160248201527f7472616e73666572546573743a20636865636b207363616c6172206661696c656044820152601960fa1b60648201526084016101b4565b610401886080015189606001518660ff16610fd6565b9194509250905061041183610e4d565b63ffffffff168760ff16148015610438575061042c82610e4d565b63ffffffff168660ff16145b801561044f575061044881610ef0565b1515851515145b6104a55760405162461bcd60e51b815260206004820152602160248201527f7472616e73666572546573743a20636865636b207363616c6172206661696c656044820152601960fa1b60648201526084016101b4565b5050505050505050565b60008060006104ca886040015189606001518660ff16610ff3565b9250925092506104d983611065565b61ffff168760ff161480156104fc57506104f282611065565b61ffff168660ff16145b8015610513575061050c81610ef0565b1515851515145b6105695760405162461bcd60e51b815260206004820152602160248201527f7472616e73666572546573743a20636865636b207363616c6172206661696c656044820152601960fa1b60648201526084016101b4565b61057f886000015189606001518660ff16611075565b9194509250905061058f83611065565b61ffff168760ff161480156105b257506105a882611065565b61ffff168660ff16145b80156105c957506105c281610ef0565b1515851515145b61061f5760405162461bcd60e51b815260206004820152602160248201527f7472616e73666572546573743a20636865636b207363616c6172206661696c656044820152601960fa1b60648201526084016101b4565b610635886040015189602001518660ff16611091565b9194509250905061064583611065565b61ffff168760ff16148015610438575061065e82611065565b61ffff168660ff1614801561044f575061044881610ef0565b60008060006106928860c001518960e001518660ff166110ad565b9250925092506106a183611125565b67ffffffffffffffff168760ff161480156106d057506106c082611125565b67ffffffffffffffff168660ff16145b80156106e757506106e081610ef0565b1515851515145b61073d5760405162461bcd60e51b815260206004820152602160248201527f7472616e73666572546573743a20636865636b207363616c6172206661696c656044820152601960fa1b60648201526084016101b4565b61075388600001518960e001518660ff16611135565b9194509250905061076383611125565b67ffffffffffffffff168760ff16148015610792575061078282611125565b67ffffffffffffffff168660ff16145b80156107a957506107a281610ef0565b1515851515145b6107ff5760405162461bcd60e51b815260206004820152602160248201527f7472616e73666572546573743a20636865636b207363616c6172206661696c656044820152601960fa1b60648201526084016101b4565b6108158860c0015189602001518660ff16611151565b9194509250905061082583611125565b67ffffffffffffffff168760ff16148015610854575061084482611125565b67ffffffffffffffff168660ff16145b801561086b575061086481610ef0565b1515851515145b6108c15760405162461bcd60e51b815260206004820152602160248201527f7472616e73666572546573743a20636865636b207363616c6172206661696c656044820152601960fa1b60648201526084016101b4565b6108d788604001518960e001518660ff1661116d565b919450925090506108e783611125565b67ffffffffffffffff168760ff16148015610916575061090682611125565b67ffffffffffffffff168660ff16145b801561092d575061092681610ef0565b1515851515145b6109835760405162461bcd60e51b815260206004820152602160248201527f7472616e73666572546573743a20636865636b207363616c6172206661696c656044820152601960fa1b60648201526084016101b4565b6109998860c0015189606001518660ff1661118a565b919450925090506109a983611125565b67ffffffffffffffff168760ff161480156109d857506109c882611125565b67ffffffffffffffff168660ff16145b80156109ef57506109e881610ef0565b1515851515145b610a455760405162461bcd60e51b815260206004820152602160248201527f7472616e73666572546573743a20636865636b207363616c6172206661696c656044820152601960fa1b60648201526084016101b4565b610a5b88608001518960e001518660ff166111a7565b91945092509050610a6b83611125565b67ffffffffffffffff168760ff16148015610a9a5750610a8a82611125565b67ffffffffffffffff168660ff16145b8015610ab15750610aaa81610ef0565b1515851515145b610b075760405162461bcd60e51b815260206004820152602160248201527f7472616e73666572546573743a20636865636b207363616c6172206661696c656044820152601960fa1b60648201526084016101b4565b610b1d8860c001518960a001518660ff166111c4565b91945092509050610b2d83611125565b67ffffffffffffffff168760ff161480156104385750610b4c82611125565b67ffffffffffffffff168660ff1614801561044f575061044881610ef0565b6000806000610bb860405180610100016040528060008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b610bc1876111e1565b8152610bcc866111e1565b6020820152610bdd60ff8816611231565b6040820152610bee60ff8716611231565b6060820152610bff60ff8816611282565b6080820152610c1060ff8716611282565b60a0820152610c2160ff88166112d5565b60c0820152610c3260ff87166112d5565b60e08201528051602082015160009182918291610c4f918a61132c565b925092509250610c5e8361139c565b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660ff92909216919091179055610c998261139c565b600060016101000a81548160ff021916908360ff160217905550610cbc81610ef0565b60008054911515620100009081027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ffff8416811792839055610d1793889360ff928316918316919091179261010082048316929104168c6104af565b600054610d3c90859060ff80821691610100810482169162010000909104168c6100fa565b600054610d6190859060ff80821691610100810482169162010000909104168c610677565b505060005460ff8082169a610100830482169a506201000090920416975095505050505050565b6000808080808060646356c72d28610da46003808060016113ac565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b81168252919091166004820152602481018c9052604481018b905263ffffffff8a1660648201526084015b6060604051808303816000875af1158015610e17573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e3b91906115a2565b919b909a509098509650505050505050565b60006064630cfed56160035b60f81b846040518363ffffffff1660e01b8152600401610ea79291907fff00000000000000000000000000000000000000000000000000000000000000929092168252602082015260400190565b6020604051808303816000875af1158015610ec6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eea91906115ff565b92915050565b6040517f0cfed56100000000000000000000000000000000000000000000000000000000815260006004820181905260248201839052908190606490630cfed561906044016020604051808303816000875af1158015610f54573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f7891906115ff565b15159392505050565b6000808080808060646356c72d28610da46001600380826113ac565b6000808080808060646356c72d28610da46003600181816113ac565b6000808080808060646356c72d28610da4600260038060016113ac565b6000808080808060646356c72d28610da4600360028160016113ac565b6000808080808060646356c72d2861100f6002808060016113ac565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b81168252919091166004820152602481018c9052604481018b905261ffff8a166064820152608401610df8565b60006064630cfed5616002610e59565b6000808080808060646356c72d2861100f6001600280826113ac565b6000808080808060646356c72d2861100f6002600181816113ac565b6000808080808060646356c72d286110c96004808060016113ac565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b81168252919091166004820152602481018c9052604481018b905267ffffffffffffffff8a166064820152608401610df8565b60006064630cfed5616004610e59565b6000808080808060646356c72d286110c96001600480826113ac565b6000808080808060646356c72d286110c96004600181816113ac565b6000808080808060646356c72d286110c9600260048060016113ac565b6000808080808060646356c72d286110c9600460028160016113ac565b6000808080808060646356c72d286110c9600360048060016113ac565b6000808080808060646356c72d286110c9600460038160016113ac565b6040516306cdb05b60e51b81527f0100000000000000000000000000000000000000000000000000000000000000600482015260ff8216602482015260009060649063d9b60b6090604401610ea7565b6040516306cdb05b60e51b81527f0200000000000000000000000000000000000000000000000000000000000000600482015261ffff8216602482015260009060649063d9b60b6090604401610ea7565b6040516306cdb05b60e51b81527f0300000000000000000000000000000000000000000000000000000000000000600482015263ffffffff8216602482015260009060649063d9b60b6090604401610ea7565b6040516306cdb05b60e51b81527f0400000000000000000000000000000000000000000000000000000000000000600482015267ffffffffffffffff8216602482015260009060649063d9b60b6090604401610ea7565b6000808080808060646356c72d2861134760018080806113ac565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b81168252919091166004820152602481018c9052604481018b905260ff8a166064820152608401610df8565b60006064630cfed5616001610e59565b60008160028111156113c0576113c06115d0565b60ff1660088460048111156113d7576113d76115d0565b61ffff16901b61ffff1660108660048111156113f5576113f56115d0565b62ffffff16901b62ffffff166018886004811115611415576114156115d0565b63ffffffff16901b17171760e01b95945050505050565b803560ff8116811461143d57600080fd5b919050565b8035801515811461143d57600080fd5b600080600080600085870361018081121561146c57600080fd5b6101008082121561147c57600080fd5b604051915080820182811067ffffffffffffffff821117156114c7577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b8060405250873582526020880135602083015260408801356040830152606088013560608301526080880135608083015260a088013560a083015260c088013560c083015260e088013560e083015281965061152481890161142c565b95505050611535610120870161142c565b92506115446101408701611442565b9150611553610160870161142c565b90509295509295909350565b60008060006060848603121561157457600080fd5b61157d8461142c565b925061158b6020850161142c565b91506115996040850161142c565b90509250925092565b6000806000606084860312156115b757600080fd5b8351925060208401519150604084015190509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60006020828403121561161157600080fd5b505191905056fea26469706673582212209b96509d2dcb57e4897348a4c502b3e3e5564cf9ac888dbcb6bdc7856b207bc164736f6c63430008140033";

type TransferScalarTestsContractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TransferScalarTestsContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TransferScalarTestsContract__factory extends ContractFactory {
  constructor(...args: TransferScalarTestsContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      TransferScalarTestsContract & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): TransferScalarTestsContract__factory {
    return super.connect(runner) as TransferScalarTestsContract__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TransferScalarTestsContractInterface {
    return new Interface(_abi) as TransferScalarTestsContractInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): TransferScalarTestsContract {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as TransferScalarTestsContract;
  }
}
