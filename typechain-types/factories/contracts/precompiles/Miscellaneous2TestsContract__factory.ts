/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  Miscellaneous2TestsContract,
  Miscellaneous2TestsContractInterface,
} from "../../../contracts/precompiles/Miscellaneous2TestsContract";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "gtUint16",
            name: "res16_16",
            type: "uint256",
          },
          {
            internalType: "gtUint16",
            name: "res8_16",
            type: "uint256",
          },
          {
            internalType: "gtUint16",
            name: "res16_8",
            type: "uint256",
          },
        ],
        internalType: "struct Miscellaneous2TestsContract.Check16",
        name: "check16",
        type: "tuple",
      },
    ],
    name: "decryptAndCompareResults16",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "gtUint32",
            name: "res32_32",
            type: "uint256",
          },
          {
            internalType: "gtUint32",
            name: "res8_32",
            type: "uint256",
          },
          {
            internalType: "gtUint32",
            name: "res32_8",
            type: "uint256",
          },
          {
            internalType: "gtUint32",
            name: "res16_32",
            type: "uint256",
          },
          {
            internalType: "gtUint32",
            name: "res32_16",
            type: "uint256",
          },
        ],
        internalType: "struct Miscellaneous2TestsContract.Check32",
        name: "check32",
        type: "tuple",
      },
    ],
    name: "decryptAndCompareResults32",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "gtUint64",
            name: "res64_64",
            type: "uint256",
          },
          {
            internalType: "gtUint64",
            name: "res8_64",
            type: "uint256",
          },
          {
            internalType: "gtUint64",
            name: "res64_8",
            type: "uint256",
          },
          {
            internalType: "gtUint64",
            name: "res16_64",
            type: "uint256",
          },
          {
            internalType: "gtUint64",
            name: "res64_16",
            type: "uint256",
          },
          {
            internalType: "gtUint64",
            name: "res32_64",
            type: "uint256",
          },
          {
            internalType: "gtUint64",
            name: "res64_32",
            type: "uint256",
          },
        ],
        internalType: "struct Miscellaneous2TestsContract.Check64",
        name: "check64",
        type: "tuple",
      },
    ],
    name: "decryptAndCompareResults64",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "a",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "b",
        type: "uint8",
      },
    ],
    name: "divTest",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getBoolResult",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getResult",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "selectionBit",
        type: "bool",
      },
      {
        internalType: "uint8",
        name: "a",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "b",
        type: "uint8",
      },
    ],
    name: "muxTest",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "a",
        type: "bool",
      },
    ],
    name: "notTest",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "a8",
        type: "uint8",
      },
      {
        internalType: "uint16",
        name: "a16",
        type: "uint16",
      },
      {
        internalType: "uint32",
        name: "a32",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "a64",
        type: "uint32",
      },
    ],
    name: "offboardOnboardTest",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "a",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "b",
        type: "uint8",
      },
    ],
    name: "remTest",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "gtUint8",
            name: "a8_s",
            type: "uint256",
          },
          {
            internalType: "gtUint8",
            name: "b8_s",
            type: "uint256",
          },
          {
            internalType: "gtUint16",
            name: "a16_s",
            type: "uint256",
          },
          {
            internalType: "gtUint16",
            name: "b16_s",
            type: "uint256",
          },
          {
            internalType: "gtUint32",
            name: "a32_s",
            type: "uint256",
          },
          {
            internalType: "gtUint32",
            name: "b32_s",
            type: "uint256",
          },
          {
            internalType: "gtUint64",
            name: "a64_s",
            type: "uint256",
          },
          {
            internalType: "gtUint64",
            name: "b64_s",
            type: "uint256",
          },
        ],
        internalType: "struct Miscellaneous2TestsContract.AllGTCastingValues",
        name: "castingValues",
        type: "tuple",
      },
      {
        internalType: "uint8",
        name: "a",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "b",
        type: "uint8",
      },
    ],
    name: "setPublicValues",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061296c806100206000396000f3fe608060405234801561001057600080fd5b50600436106100c95760003560e01c8063a103e4c011610081578063b30fc30d1161005b578063b30fc30d146101cb578063de292789146101de578063ebb571fd146101e957600080fd5b8063a103e4c01461017d578063a609476a14610190578063acb38169146101a357600080fd5b80636c74e714116100b25780636c74e7141461011c57806380f937bc1461014157806392bba3561461016d57600080fd5b80632e544aa0146100ce578063690ec3d9146100f9575b600080fd5b6100e16100dc3660046125cb565b6101fe565b60405161ffff90911681526020015b60405180910390f35b61010c61010736600461264a565b6102d2565b60405190151581526020016100f0565b61012f61012a366004612676565b610337565b60405160ff90911681526020016100f0565b61015461014f3660046126b9565b610733565b60405167ffffffffffffffff90911681526020016100f0565b600054610100900460ff1661010c565b61012f61018b36600461274b565b6108bf565b61012f61019e36600461274b565b610f63565b6101b66101b136600461277e565b6115e4565b60405163ffffffff90911681526020016100f0565b61012f6101d9366004612810565b6116fa565b60005460ff1661012f565b6101fc6101f736600461286d565b61189e565b005b60008061020e8360000151611925565b905061021d8360200151611925565b61ffff168161ffff16148015610246575061023b8360400151611925565b61ffff168161ffff16145b6102cc5760405162461bcd60e51b815260206004820152604660248201527f64656372797074416e64436f6d70617265416c6c526573756c74733a2046616960448201527f6c656420746f206465637279707420616e6420636f6d7061726520616c6c20726064820152656573756c747360d01b608482015260a4015b60405180910390fd5b92915050565b6000806102de836119c2565b905060006102eb82611a4e565b90506102f681611a5d565b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff166101009215158302179081905560ff91900416949350505050565b600061038160405180610100016040528060008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b6103a560405180606001604052806000815260200160008152602001600081525090565b6103d76040518060a0016040528060008152602001600081526020016000815260200160008152602001600081525090565b6104176040518060e00160405280600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b61042284888861189e565b600061042d896119c2565b905061044a6104458287600001518860200151611aee565b611b8b565b6000806101000a81548160ff021916908360ff1602179055506104768186604001518760600151611b9b565b84528451606086015161048a918391611bb0565b8460200181815250506104a68186604001518760200151611bc6565b604085015260006104b6856101fe565b60005490915060ff1661ffff8216146105115760405162461bcd60e51b815260206004820152601760248201527f6d7578546573743a2063617374203136206661696c656400000000000000000060448201526064016102c3565b6105248287608001518860a00151611bdc565b8452855160a0870151610538918491611bf1565b8460200181815250506105548287608001518860200151611c07565b8460400181815250506105708287604001518860a00151611c1d565b84606001818152505061058c8287608001518860600151611c33565b6080850152600061059c856115e4565b60005490915060ff1663ffffffff8216146105f95760405162461bcd60e51b815260206004820152601760248201527f6d7578546573743a2063617374203332206661696c656400000000000000000060448201526064016102c3565b61060c838860c001518960e00151611c49565b8452865160e0880151610620918591611c5e565b84602001818152505061063c838860c001518960200151611c74565b8460400181815250506106588388604001518960e00151611c8a565b846060018181525050610674838860c001518960600151611ca0565b8460800181815250506106908388608001518960e00151611cb6565b8460a00181815250506106ac838860c001518960a00151611ccc565b60c085015260006106bc85610733565b60005490915060ff1667ffffffffffffffff82161461071d5760405162461bcd60e51b815260206004820152601760248201527f6d7578546573743a2063617374203634206661696c656400000000000000000060448201526064016102c3565b505060005460ff169a9950505050505050505050565b6000806107438360000151611ce2565b90506107528360200151611ce2565b67ffffffffffffffff168167ffffffffffffffff16148015610793575061077c8360400151611ce2565b67ffffffffffffffff168167ffffffffffffffff16145b80156107be57506107a78360800151611ce2565b67ffffffffffffffff168167ffffffffffffffff16145b80156107e957506107d28360600151611ce2565b67ffffffffffffffff168167ffffffffffffffff16145b801561081457506107fd8360c00151611ce2565b67ffffffffffffffff168167ffffffffffffffff16145b801561024657506108288360a00151611ce2565b67ffffffffffffffff168167ffffffffffffffff16146102cc5760405162461bcd60e51b815260206004820152604660248201527f64656372797074416e64436f6d70617265416c6c526573756c74733a2046616960448201527f6c656420746f206465637279707420616e6420636f6d7061726520616c6c20726064820152656573756c747360d01b608482015260a4016102c3565b600061090960405180610100016040528060008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b61092d60405180606001604052806000815260200160008152602001600081525090565b61095f6040518060a0016040528060008152602001600081526020016000815260200160008152602001600081525090565b61099f6040518060e00160405280600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b6109aa84888861189e565b6109bf61044585600001518660200151611cf2565b6000806101000a81548160ff021916908360ff1602179055506109ea84604001518560600151611d5c565b8352835160608501516109fd9190611d71565b836020018181525050610a1884604001518560200151611d87565b60408401526000610a28846101fe565b60005490915060ff1661ffff821614610a835760405162461bcd60e51b815260206004820152601760248201527f72656d546573743a2063617374203136206661696c656400000000000000000060448201526064016102c3565b610a9585608001518660a00151611d9d565b8352845160a0860151610aa89190611db2565b836020018181525050610ac385608001518660200151611dc8565b836040018181525050610ade85604001518660a00151611dde565b836060018181525050610af985608001518660600151611df4565b60808401526000610b09846115e4565b60005490915060ff1663ffffffff821614610b665760405162461bcd60e51b815260206004820152601760248201527f72656d546573743a2063617374203332206661696c656400000000000000000060448201526064016102c3565b610b788660c001518760e00151611e0a565b8352855160e0870151610b8b9190611e1f565b836020018181525050610ba68660c001518760200151611e35565b836040018181525050610bc186604001518760e00151611e4b565b836060018181525050610bdc8660c001518760600151611e61565b836080018181525050610bf786608001518760e00151611e77565b8360a0018181525050610c128660c001518760a00151611e8d565b60c08401526000610c2284610733565b60005490915060ff1667ffffffffffffffff821614610c835760405162461bcd60e51b815260206004820152601760248201527f72656d546573743a2063617374203634206661696c656400000000000000000060448201526064016102c3565b610c946104458b8960200151611ea3565b60005460ff9081169116148015610cc35750610cb761044588600001518b611ef5565b60005460ff9081169116145b610d355760405162461bcd60e51b815260206004820152602760248201527f72656d546573743a2074657374203820626974732077697468207363616c617260448201527f206661696c65640000000000000000000000000000000000000000000000000060648201526084016102c3565b610d4e610d498b60ff168960600151611f48565b611925565b60005460ff1661ffff91909116148015610d865750610d77610d4988604001518b60ff16611f9c565b60005460ff1661ffff91909116145b610de35760405162461bcd60e51b815260206004820152602860248201527f72656d546573743a207465737420313620626974732077697468207363616c616044820152671c8819985a5b195960c21b60648201526084016102c3565b610dfc610df78b60ff168960a00151611ff0565b612046565b60005460ff1663ffffffff91909116148015610e385750610e27610df788608001518b60ff16612056565b60005460ff1663ffffffff91909116145b610e955760405162461bcd60e51b815260206004820152602860248201527f72656d546573743a207465737420333220626974732077697468207363616c616044820152671c8819985a5b195960c21b60648201526084016102c3565b610eae610ea98b60ff168960e001516120ac565b611ce2565b60005460ff1667ffffffffffffffff91909116148015610ef25750610edd610ea98860c001518b60ff16612106565b60005460ff1667ffffffffffffffff91909116145b610f4f5760405162461bcd60e51b815260206004820152602860248201527f72656d546573743a207465737420363420626974732077697468207363616c616044820152671c8819985a5b195960c21b60648201526084016102c3565b505060005460ff1698975050505050505050565b6000610fad60405180610100016040528060008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b610fd160405180606001604052806000815260200160008152602001600081525090565b6110036040518060a0016040528060008152602001600081526020016000815260200160008152602001600081525090565b6110436040518060e00160405280600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b61104e84888861189e565b61106361044585600001518660200151612160565b6000806101000a81548160ff021916908360ff16021790555061108e84604001518560600151612175565b8352835160608501516110a1919061218a565b8360200181815250506110bc846040015185602001516121a0565b604084015260006110cc846101fe565b60005490915060ff1661ffff8216146111275760405162461bcd60e51b815260206004820152601760248201527f646976546573743a2063617374203136206661696c656400000000000000000060448201526064016102c3565b61113985608001518660a001516121b6565b8352845160a086015161114c91906121cb565b836020018181525050611167856080015186602001516121e1565b83604001818152505061118285604001518660a001516121f7565b83606001818152505061119d8560800151866060015161220d565b608084015260006111ad846115e4565b60005490915060ff1663ffffffff82161461120a5760405162461bcd60e51b815260206004820152601760248201527f646976546573743a2063617374203332206661696c656400000000000000000060448201526064016102c3565b61121c8660c001518760e00151612223565b8352855160e087015161122f9190612238565b83602001818152505061124a8660c00151876020015161224e565b83604001818152505061126586604001518760e00151612264565b8360600181815250506112808660c00151876060015161227a565b83608001818152505061129b86608001518760e00151612290565b8360a00181815250506112b68660c001518760a001516122a6565b60c084015260006112c684610733565b60005490915060ff1667ffffffffffffffff8216146113275760405162461bcd60e51b815260206004820152601760248201527f646976546573743a2063617374203634206661696c656400000000000000000060448201526064016102c3565b6113386104458b89602001516122bc565b60005460ff9081169116148015611367575061135b61044588600001518b6122d1565b60005460ff9081169116145b6113d95760405162461bcd60e51b815260206004820152602760248201527f646976546573743a2074657374203820626974732077697468207363616c617260448201527f206661696c65640000000000000000000000000000000000000000000000000060648201526084016102c3565b6113ed610d498b60ff1689606001516122e7565b60005460ff1661ffff919091161480156114255750611416610d4988604001518b60ff166122fd565b60005460ff1661ffff91909116145b6114825760405162461bcd60e51b815260206004820152602860248201527f646976546573743a207465737420313620626974732077697468207363616c616044820152671c8819985a5b195960c21b60648201526084016102c3565b611496610df78b60ff168960a00151612313565b60005460ff1663ffffffff919091161480156114d257506114c1610df788608001518b60ff16612329565b60005460ff1663ffffffff91909116145b61152f5760405162461bcd60e51b815260206004820152602860248201527f646976546573743a207465737420333220626974732077697468207363616c616044820152671c8819985a5b195960c21b60648201526084016102c3565b611543610ea98b60ff168960e0015161233f565b60005460ff1667ffffffffffffffff919091161480156115875750611572610ea98860c001518b60ff16612355565b60005460ff1667ffffffffffffffff91909116145b610f4f5760405162461bcd60e51b815260206004820152602860248201527f646976546573743a207465737420363420626974732077697468207363616c616044820152671c8819985a5b195960c21b60648201526084016102c3565b6000806115f48360000151612046565b90506116038360200151612046565b63ffffffff168163ffffffff1614801561163457506116258360400151612046565b63ffffffff168163ffffffff16145b801561165757506116488360800151612046565b63ffffffff168163ffffffff16145b8015610246575061166b8360600151612046565b63ffffffff168163ffffffff16146102cc5760405162461bcd60e51b815260206004820152604660248201527f64656372797074416e64436f6d70617265416c6c526573756c74733a2046616960448201527f6c656420746f206465637279707420616e6420636f6d7061726520616c6c20726064820152656573756c747360d01b608482015260a4016102c3565b6000806117068661236b565b90506000611713866123bb565b905060006117208661240c565b905060006117338663ffffffff1661245f565b90506000611740856124b6565b905061174e610445826124c6565b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660ff92909216919091178155611789856124d6565b90506000611799610d49836124e6565b905060006117a6866124f6565b905060006117b6610df783612506565b905060006117c387612516565b905060006117d3610ea983612526565b60005490915060ff1661ffff86161480156117f8575060005460ff1663ffffffff8416145b8015611812575060005460ff1667ffffffffffffffff8216145b6118845760405162461bcd60e51b815260206004820152602960248201527f4661696c656420746f206f6666626f61726420616e64206f6e626f617264206160448201527f6c6c2076616c756573000000000000000000000000000000000000000000000060648201526084016102c3565b505060005460ff169e9d5050505050505050505050505050565b6118a78261236b565b83526118b28161236b565b60208401526118c360ff83166123bb565b60408401526118d460ff82166123bb565b60608401526118e560ff831661240c565b60808401526118f660ff821661240c565b60a084015261190760ff831661245f565b60c084015261191860ff821661245f565b60e0909301929092525050565b60006064630cfed56160025b60f81b846040518363ffffffff1660e01b815260040161197f9291907fff00000000000000000000000000000000000000000000000000000000000000929092168252602082015260400190565b6020604051808303816000875af115801561199e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102cc919061291d565b600080826119d15760006119d4565b60015b6040516306cdb05b60e51b81526000600482015260ff9190911660248201819052915060649063d9b60b60906044015b6020604051808303816000875af1158015611a23573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a47919061291d565b9392505050565b60006064631d79e49a82611931565b6040517f0cfed56100000000000000000000000000000000000000000000000000000000815260006004820181905260248201839052908190606490630cfed561906044016020604051808303816000875af1158015611ac1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ae5919061291d565b15159392505050565b600060646320cc408d611b0360018085612536565b6040516001600160e01b031960e084901b1681526001600160e81b031990911660048201526024810187905260448101869052606481018590526084016020604051808303816000875af1158015611b5f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b83919061291d565b949350505050565b60006064630cfed5616001611931565b600060646320cc408d611b0360028085612536565b600060646320cc408d611b036001600285612536565b600060646320cc408d611b036002600185612536565b600060646320cc408d611b0360038085612536565b600060646320cc408d611b036001600385612536565b600060646320cc408d611b036003600185612536565b600060646320cc408d611b036002600385612536565b600060646320cc408d611b036003600285612536565b600060646320cc408d611b0360048085612536565b600060646320cc408d611b036001600485612536565b600060646320cc408d611b036004600185612536565b600060646320cc408d611b036002600485612536565b600060646320cc408d611b036004600285612536565b600060646320cc408d611b036003600485612536565b600060646320cc408d611b036004600385612536565b60006064630cfed5616004611931565b600060646386e3b7b9611d0760018085612536565b6040516001600160e01b031960e084901b1681526001600160e81b0319909116600482015260248101869052604481018590526064016020604051808303816000875af1158015611a23573d6000803e3d6000fd5b600060646386e3b7b9611d0760028085612536565b600060646386e3b7b9611d076001600285612536565b600060646386e3b7b9611d076002600185612536565b600060646386e3b7b9611d0760038085612536565b600060646386e3b7b9611d076001600385612536565b600060646386e3b7b9611d076003600185612536565b600060646386e3b7b9611d076002600385612536565b600060646386e3b7b9611d076003600285612536565b600060646386e3b7b9611d0760048085612536565b600060646386e3b7b9611d076001600485612536565b600060646386e3b7b9611d076004600185612536565b600060646386e3b7b9611d076002600485612536565b600060646386e3b7b9611d076004600285612536565b600060646386e3b7b9611d076003600485612536565b600060646386e3b7b9611d076004600385612536565b600060646386e3b7b9611eb860018080612536565b6040516001600160e01b031960e084901b1681526001600160e81b0319909116600482015260ff8616602482015260448101859052606401611a04565b600060646386e3b7b9611f0b6001806002612536565b6040516001600160e01b031960e084901b1681526001600160e81b031990911660048201526024810186905260ff85166044820152606401611a04565b600060646386e3b7b9611f5e6002806001612536565b6040516001600160e01b031960e084901b1681526001600160e81b0319909116600482015261ffff8616602482015260448101859052606401611a04565b600060646386e3b7b9611fb26001806002612536565b6040516001600160e01b031960e084901b1681526001600160e81b031990911660048201526024810186905261ffff85166044820152606401611a04565b600060646386e3b7b96120066003806001612536565b6040516001600160e01b031960e084901b1681526001600160e81b0319909116600482015263ffffffff8616602482015260448101859052606401611a04565b60006064630cfed5616003611931565b600060646386e3b7b961206c6003806002612536565b6040516001600160e01b031960e084901b1681526001600160e81b031990911660048201526024810186905263ffffffff85166044820152606401611a04565b600060646386e3b7b96120c26004806001612536565b6040516001600160e01b031960e084901b1681526001600160e81b0319909116600482015267ffffffffffffffff8616602482015260448101859052606401611a04565b600060646386e3b7b961211c6004806002612536565b6040516001600160e01b031960e084901b1681526001600160e81b031990911660048201526024810186905267ffffffffffffffff85166044820152606401611a04565b60006064634e9ba4b5611d0760018085612536565b60006064634e9ba4b5611d0760028085612536565b60006064634e9ba4b5611d076001600285612536565b60006064634e9ba4b5611d076002600185612536565b60006064634e9ba4b5611d0760038085612536565b60006064634e9ba4b5611d076001600385612536565b60006064634e9ba4b5611d076003600185612536565b60006064634e9ba4b5611d076002600385612536565b60006064634e9ba4b5611d076003600285612536565b60006064634e9ba4b5611d0760048085612536565b60006064634e9ba4b5611d076001600485612536565b60006064634e9ba4b5611d076004600185612536565b60006064634e9ba4b5611d076002600485612536565b60006064634e9ba4b5611d076004600285612536565b60006064634e9ba4b5611d076003600485612536565b60006064634e9ba4b5611d076004600385612536565b60006064634e9ba4b5611eb860018080612536565b60006064634e9ba4b5611f0b6001806002612536565b60006064634e9ba4b5611f5e6002806001612536565b60006064634e9ba4b5611fb26001806002612536565b60006064634e9ba4b56120066003806001612536565b60006064634e9ba4b561206c6003806002612536565b60006064634e9ba4b56120c26004806001612536565b60006064634e9ba4b561211c6004806002612536565b6040516306cdb05b60e51b81527f0100000000000000000000000000000000000000000000000000000000000000600482015260ff8216602482015260009060649063d9b60b609060440161197f565b6040516306cdb05b60e51b81527f0200000000000000000000000000000000000000000000000000000000000000600482015261ffff8216602482015260009060649063d9b60b609060440161197f565b6040516306cdb05b60e51b81527f0300000000000000000000000000000000000000000000000000000000000000600482015263ffffffff8216602482015260009060649063d9b60b609060440161197f565b6040516306cdb05b60e51b81527f0400000000000000000000000000000000000000000000000000000000000000600482015267ffffffffffffffff8216602482015260009060649063d9b60b609060440161197f565b6000606463c50c9c026001611931565b6000606463d2c135e56001611931565b6000606463c50c9c026002611931565b6000606463d2c135e56002611931565b6000606463c50c9c026003611931565b6000606463d2c135e56003611931565b6000606463c50c9c026004611931565b6000606463d2c135e56004611931565b600081600281111561254a5761254a612907565b60ff16600884600481111561256157612561612907565b61ffff16901b61ffff16601086600481111561257f5761257f612907565b62ffffff16901b171760e81b949350505050565b604051610100810167ffffffffffffffff811182821017156125c557634e487b7160e01b600052604160045260246000fd5b60405290565b6000606082840312156125dd57600080fd5b6040516060810181811067ffffffffffffffff8211171561260e57634e487b7160e01b600052604160045260246000fd5b80604052508235815260208301356020820152604083013560408201528091505092915050565b8035801515811461264557600080fd5b919050565b60006020828403121561265c57600080fd5b611a4782612635565b803560ff8116811461264557600080fd5b60008060006060848603121561268b57600080fd5b61269484612635565b92506126a260208501612665565b91506126b060408501612665565b90509250925092565b600060e082840312156126cb57600080fd5b60405160e0810181811067ffffffffffffffff821117156126fc57634e487b7160e01b600052604160045260246000fd5b8060405250823581526020830135602082015260408301356040820152606083013560608201526080830135608082015260a083013560a082015260c083013560c08201528091505092915050565b6000806040838503121561275e57600080fd5b61276783612665565b915061277560208401612665565b90509250929050565b600060a0828403121561279057600080fd5b60405160a0810181811067ffffffffffffffff821117156127c157634e487b7160e01b600052604160045260246000fd5b806040525082358152602083013560208201526040830135604082015260608301356060820152608083013560808201528091505092915050565b803563ffffffff8116811461264557600080fd5b6000806000806080858703121561282657600080fd5b61282f85612665565b9350602085013561ffff8116811461284657600080fd5b9250612854604086016127fc565b9150612862606086016127fc565b905092959194509250565b600080600083850361014081121561288457600080fd5b6101008082121561289457600080fd5b61289c612593565b9150853582526020860135602083015260408601356040830152606086013560608301526080860135608083015260a086013560a083015260c086013560c083015260e086013560e08301528194506128f6818701612665565b935050506126b06101208501612665565b634e487b7160e01b600052602160045260246000fd5b60006020828403121561292f57600080fd5b505191905056fea26469706673582212207870c25e1d6fd972bbbc648502984b4ded4878f2c2f7629dd2fe88e2b3cea2ad64736f6c63430008140033";

type Miscellaneous2TestsContractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: Miscellaneous2TestsContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Miscellaneous2TestsContract__factory extends ContractFactory {
  constructor(...args: Miscellaneous2TestsContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Miscellaneous2TestsContract & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): Miscellaneous2TestsContract__factory {
    return super.connect(runner) as Miscellaneous2TestsContract__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): Miscellaneous2TestsContractInterface {
    return new Interface(_abi) as Miscellaneous2TestsContractInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): Miscellaneous2TestsContract {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as Miscellaneous2TestsContract;
  }
}
